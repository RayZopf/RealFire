///////////////////////////////////////////////////////////////////////////////////////////////////
//Module that provides some simple functions
//
//by: Zopf Resident - Ray Zopf (Raz)
//06. Feb. 2014
//v0.1

//Files:
// GenericFunctions.lslm
//
//
//Prequisites: ----
//
//
//Changelog
// added fire size variables
// added remote control variables

//FIXME: ----

//TODO: ----
//
///////////////////////////////////////////////////////////////////////////////////////////////////


$module ()


//###
//GenericFunctions.lslm
//0.1 - 06Feb2014

integer checkInt(string par, integer val, integer min, integer max)
{
	if (val < min || val > max) {
		if (val < min) val = min;
		else if (val > max) val = max;
		llWhisper(0, "[Notecard] " + par + " out of range, corrected to " + (string)val);
	}
	return val;
}


vector checkVector(string par, vector val)
{
	if (val == ZERO_VECTOR) {
		val = <100,100,100>;
		llWhisper(0, "[Notecard] " + par + " out of range, corrected to " + (string)val);
	}
	return val;
}


integer min (integer x, integer y)
{
	if (x < y) return x; else return y;
}


integer max (integer x, integer y)
{
	if (x > y) return x; else return y;
}


float percentage (float per, float num)
{
	return num / 100.0 * per;
}


//END GenericFunctions.lslm
//###